@startuml
left to right direction
title EksamensProjekt_Fog - Class Diagram

"Drawings" <--> "Calculations"
"Measurements" <-> "Calculations"

package "DBAccess" #fa9696 {
    Class DataMapper
    Class Connector
}

package "PresentationLayer" #78d683{

FrontController --|> Command
FrontController -[hidden]> Command
HttpServlet -|> FrontController
Command --|> "//Command//"
Command -[hidden]> "//Command//"
Tables -[hidden]> Measurements

    package "//Command//" #78d683{
    Class AdminItemList
    Class AdminItemListDB
    Class AdminMeasurementUnits
    Class AdminMeasurementUnitsDB
    Class AdminRafterSpacing
    Class AdminRafterSpacingDB
    Class AdminReceipt
    Class AdminRejectQuote
    Class AdminRoof
    Class AdminRoofDB
    Class AdminRoofPitch
    Class AdminRoofPitchDB
    Class AdminStandardDimension
    Class AdminStandardDimensionDB
    Class CarportCalcPage
    Class CarportCustomize
    Class Drawing
    Class EditItemList
    Class Login
    Class QuoteView
    Class Redirect
    Class Register
    Class RejectQuote
    Class ReturnAdmin
    Class UnknownCommand
    Class UpdateQuoteOrder
    Class UpdateQuotePrice
    Class UpdateQuoteUser

    }
}

package "FunctionLayer" #96c4fa{
LogicFacade <--> "DataMapper"
LogicFacade <--> "//Command//"
LogicFacade <--> "Drawings"
LogicFacade <--> "Calculations"
LogicFacade <-> "Tables"
Connector <--> DataMapper
"Drawings" -[hidden]-->"Calculations"
"Drawings" -[hidden]->"Measurements"
"Tables" <-> "LogicFacade"


    package "Exceptions" #96c4fa {
    Class Exception
    Class LoginSampleException
    Exception -[hidden]> LoginSampleException
    }

    package "Drawings" #96c4fa {
    Svg -[hidden]-> SvgSideways
    SvgFront -[hidden]-> SvgSidewaysBlueprint
    Class Svg
    Class SvgFront
    Class SvgSideways
    Class SvgSidewaysBlueprint
    }

    package "Calculations" #96c4fa {
    Class BeamDimensionHeavy
    Class BeamDimensionLight
    Class CarportCalculation
    Class Item
    Class CreateCalculatedQuote
    Class StandardDimensions
    Class PriceCalculator
    }

    package "Measurements" #96c4fa {

    Class CarportLength
    Class CarportWidth
    Class MeasurementUnits
    Class RafterSpacing
    Class Roof
    Class RoofDegree
    Class RoofFlat
    Class RoofPitch
    Class RoofRaised
    Class ShedWidth
    Class ShedLength
    }

    package "Tables" #96c4fa {
    CustomerQuote -up[hidden]> ItemList
    ItemList -[hidden]up> UserProposition
    Class CustomerQuote
    Class ItemList
    Class UserProposition
    }

    package "Users" #96c4fa {
    DataMapper <-> User
    Class User
    }
}

/'##########################
FunctionLayer
########################## '/
Class CarportCalculation{
-int orderID
-int bottomLathSpan
-int bottomLaths
-double topLathGap
-double avgLathSpan
-double roofTileLength
-double roofTileWidth
-double roofTrapezLength
-double roofTrapezWidth
-String shedCladdingBoardDim
-String beamDimensionHeavy
-String beamDimensionLight
-int raftType
-int shedWallLathType
-int shedCladdingBoardType
-int roofLathType
-int supportStrapType
-int roofCladType
-int sternBoardType
-int beamType
-int doorKit
-int bracketKit
-int screwKitRoofRaised
-int screwKitTrapez
-int screwKitGenericRoofBrackets
-int screwKitGenericRoofLaths
-int screwKitShedDoorCladdingInside
-int screwKitShedDoorCladdingOutside
-boolean raisedRoof
-int carportLength
-int carportWidth
-int customerRoofAngle
-int shedLength
-int shedWidth
-double raftLength
-int noOfRafts
-double raftDistance
-double avgRaftDistance
-String raftDimension
-double horizontalRaftLength
-double verticalRaftLength
-int noOfHorizontalRafts
-int noOfVerticalRafts
-int noOfShedWallLaths
-double shedWallLathsTotalLength
-int noOfCladdingBoardsTotal
-double claddingBoardOverlap
-int noOfCladdingBoardsWidth
-int noOfCladdingBoardsLength
-double calcRoofHeight
-int noOfLaths
-double lathSpan
-double supportingStrapLength
-int totalNumberOfRoofTiles
-int totalNumberOfRoofTrapezPlates
-String roofCladdingType
-int calcAngle
-boolean roofHeavy
-double sternBoardLength
-String beamDimension
-int noOfBeams
-List <BeamDimensionHeavy> raftStringHeavy
-List <BeamDimensionLight> raftStringHeavy
+Arraylist<Arraylist> raftDistancesLight
+Arraylist<Arraylist> raftDistancesHeavy
+double raftLengthAdjust
-List<StandardDimensions> standardDimensions
-Map<Integer, Double> angleAndFactor
+CarportCalculation(orderID)
-calcRaftLength(carportWidth, customerRoofAngle,calculateRoofAngle)
-calcShedCladding(shedWidth, shedLength)
-calculateShedWallLaths()
-calcRoofCladdingArea(carportLength, calcRaftLength, ROOF_TILE_LENGTH, ROOF_TILE_WIDTH, ROOF_TRAPEZ_LENGTH, ROOF_TRAPEZ_WIDTH, customerRoofAngle)
-calcNoOfBeamsAndDim(shedLength)
-calculateSupportingStrap(carportWidth, carportLength)
-calculateRoofAngle(customerRoofAngle)
-calcSternBoardLength(RaftLength)
-noOfRafts(carportLength, raftDistance)
-calcRoofHeight(customerRoofAngle, carportWidth)
-calcRoofLaths(calcRaftLength)
}

class StandardDimensions{
-int standard_dimensions_id
-int bottom_lathspan
-int bottom_laths
-double top_lath_gap
-double avg_lath_span
-double roof_tile_length
-double roof_tile_width
-double roof_trapez_length
-double roof_trapez_width
-String shed_claddeing_board_dim
-String beam_dimension_heavy
-String beam_dimension_light
+StandardDimensions(standard_dimensions_id, bottom_lathspan,bottom_laths,top_lath_gap,avg_lath_span,roof_tile_length, roof_tile_width, roof_trapez_length, roof_trapez_width, shed_claddeing_board_dim, beam_dimension_heavy, beam_dimension_light)
+StandardDimensions(bottom_lathspan, bottom_laths, top_lath_gap, avg_lath_span, roof_tile_length, roof_tile_width, roof_trapez_length, roof_trapez_width, shed_claddeing_board_dim, beam_dimension_heavy, beam_dimension_light) {

}

class PriceCalculator{
+ArrayList <Item> itemList
+orderLinePriceOld
+orderLinePriceNew
+orderID
-double totalRaftLength
-double totalRaftPrice
-double totalShedWallLathLength
-double totalShedCladdingBoardLength
-double totalShedCladdingBoardPrice
-double totalShedWallLathPrice
1-double totalLathsLength
-double totalSupportingStrapLength
-int totalNumberOfRoofTiles
-int totalNumberOfRoofTrapezPlates
-double totalRoofLathPrice
-double totalSupportingStrapPrice
-double totalRoofCladPrice
-double totalSternBoardLength
-double totalNoOfBeamLength
-double totalSternBoardPrice
-double totalBeamPrice
-int doorKitQty
-int screwKitGenericRoofBracketsQty
-int screwKitGenericRoofLathsQty
-int bracketKitQty
-int screwKitShedDoorCladdingInsideQty
-int screwKitShedDoorCladdingOutsideQty
-int screwKitRoofTilesQty
-int screwKitTrapezQty
-double doorKitPrice
-double screwKitGenericRoofBracketsPrice
-double screwKitGenericRoofLathsPrice
-double bracketKitPrice
-double screwKitShedDoorCladdingInsidePrice
-double screwKitShedDoorCladdingOutsidePrice
-double screwKitRoofTilesPrice
-double screwKitTrapezPrice
-double totalCarportCostNoTax
-double totalCarportPriceCostWithTax
-double totalCarportPriceCoverage
+PriceCalculator(CarportCalculation cpCalc)
+PriceCalculator(oLineID, qty, orderID)
+double updatePrice(itemID, qty)
+void orderLineToDB
+void calculateCarportTotalPrice
+void calculateCarportTotalPrice(totalCarportCostNoTax)
-Item itemSearch(int itemID)
}

Class BeamDimensionLight{
-String beamDimensionLight
-double beamSpacingLight
+BeamDimensionLight(beamDimensionLight, beamSpacingLight)
}

Class BeamDimensionHeavy{
-String beamDimensionHeavy
-double beamSpacingHeavy
+BeamDimensionHeavy(beamDimensionHeavy, beamSpacingHeavy)
}

class CarportLength{
+CarportLength(carportLengthOptions)
}

class CarportWidth{
+CarportWidth(carportWidthOptions)
}

class CreateCalculatedQuote{
}

Class RafterSpacing{
-int rafter_spacing_id
-String category
-String beam_dimension
-double beam_spacing
-double rafter_length
+RafterSpacing(rafter_spacing_id, category, beam_dimension, beam_spacing, rafter_length)
}

class RoofDegree{
-int roofDegreeOption
+RoofDegree(roofDegreeOption)
}

class Roof{
-int roof_id
-String roof_type
-String roof_category
-String roof_material
+Roof(roof_id, roof_type, roof_category, roof_material)
}

Class RoofPitch{
-int roof_pitch_id
-int pitch
-double factor
+ RoofPitch(roof_pitch_id, pitch, factor)
}

Class MeasurementUnits{
-int measurementUnitsId;
-int units
-int c_width
-int c_length
-int ts_width
-int ts_length
+MeasurementUnits(measurementUnitsId, units, c_width, c_length, ts_width, ts_length)
}

class RoofFlat{
-String roofFlatOptions
+roofFlat(roofFlatOptions)
}

class RoofRaised{
-String RoofRaisedOptions
+RoofRaised(roofRaisedOptions)
}

class ShedLength{
-int shedLengthOptions
+ShedLength(shedLengthOptions)
}

class ShedWidth{
-int shedWidthOptions
+ShedWidth(shedWidthOptions)
}

class Svg{
+Svg(orderID)
-double carportWidth
-double carportLength
-double carportX
-double carportY
-double noOfRafts
-double raftDistance
-double raftLength
-double raftWidth
-double raftX
-double raftY
-double shedLength
-double shedWidth
-double shedX
-double shedY
-double noOfLaths
-double lathLength
-double lathWidth
-double lathSpan
-double lathX
-double lathY
-double noOfBeams
-double beamDistance
-double beamHight
-double beamWidth
-double beamX
-double beamY
-double roofBargeHeigt
-double roofBargeWidth
-double roofBargeX
-double roofBargeY
-double windCrossX1
-double windCrossX2
-double windCrossY1
-double windCrossY2
-double arrowLineX1
-double arrowLineX2
-double arrowLineY1
-double arrowLineY2
-double textX
-double textY
-int text
-double width
-double height
-String viewbox
-double x
-double y
-Stringbuilder svg
-String headerTemplate1
-String headerTemplate2
-String headerTemplate3
-String headerTemplate4
-String headerTemplate5
-String rectTemplate
-String rectRemTemplate
-String rectShedTemplate
-String lineTemplate
-String dotLineTemplate
-String lowerTextTemplate
+void addCarport()
+ toString()
}

class SvgFront{
+SvgFront(orderID)
-double carportWidth
-double carportLength
-double carportX
-double carportY
-double roofHeigt
-double actualRoofHeigt
-double roofAngle
-double roofRaftLath
-double beamlength
-double carportHeight
-double noOfRafts
-double raftDistance
-double raftLength
-double raftWidth
-double shedLength
-double shedWidth
-double noOfLaths
-double lathLength
-double lathWidth
-double lathSpan
-double noOfBeams
-double beamHight
-double beamWidth
-double beamX
-double beamY
-double roofTopAngel
-double arrowLineX1
-double arrowLineX2
-double arrowLineY1
-double arrowLineY2
-double textX
-double textY
-int text
-double width
-double height
-String viewbox
-double x
-double y
-StringBuilder svgFront = new StringBuilder()
-String headerTemplate1
-String headerTemplate2
-String rectTemplate
-String lathTemplate
-String beamTemplate
-String lineTemplate
-String lineNoArrowTemplate
-String lowerTextTemplate
-String lowerAngelTextTemplate
+void addCarportFront()
+ toString()
}

class SvgSideways{
+SvgSideways(orderID)
-double carportLength
-double carportX
-double carportY
-double noOfRafts
-double raftDistance
-double raftHeight
-double raftWidth
-double raftX
-double raftY
-double roofHeigt
-int pitch
-double roofLength
-double roofX
-double roofY
-double roofRidgeHeight
-double roofRidgeLength
-double RidgeX
-double RidgeY
-double fasciaBoardHeight
-double fasciaBoardLength
-double fasciaBoardX
-double fasciaBoardY
-double shedLength
-double shedY
-double shedCladdingWidth
-double shedCladdingHeight
-double noOfLaths
-double lathWidth
-double lathLength
-double lathSpan
-double lathX
-double lathY
-double noOfBeams
-double beamlength
-double beamWidth
-double beamY
-double roofTileHeight
-double roofTileWidth
-double roofTileRows
-double roofTilesX1
-double roofTilesY1
-double carportHeight = (roofHeigt+beamlength+5)
-Stringbuilder svgSideways
-String headerTemplate
-String rectTemplate
-String rectTemplateRoof
-String rectTemplateShed
-String rectTemplateShed2
-String rectTemplatelaths
-String rectTemplateTile
-String rectTemplateHiddenTile
-String lineTemplate
-String lineNoArrowTemplate
+void addRoof()
+void addCarport()
+void addLines()
+void addRoofTiles()
+ toString()
}

Class SvgSidewaysBlueprint{
+SvgSidewaysBlueprint(orderID)
-double carportLength
-double carportX
-double carportY
-double noOfRafts
-double raftDistance
-double raftHeight
-double raftWidth
-double raftX
-double raftY
-double roofHeigt
-int pitch
-double roofRidgeHeight
-double roofRidgeLength
-double RidgeX
-double RidgeY
-double fasciaBoardHeight
-double fasciaBoardX
-double fasciaBoardY
-double shedLength
-double shedY
-double shedCladdingWidth
-double shedCladdingHeight
-double noOfLaths
-double lathWidth
-double lathLength
-double lathX
-double lathY
-double beamlength
-double beamWidth
-double beamX
-double beamY
-double carportHeight
-double width
-double height
-double x
-double y
-int text
-StringBuilder svgSidewaysBlueprint = new StringBuilder()
-String headerTemplate
-String rectTemplate
-String rectTemplateRoof
-String rectTemplateShed
-String rectTemplateShed2
-String rectTemplateLaths
-String lineTemplate
-String lineNoArrowTemplate
-String lowerTextTemplate
+void addRoof()
+void addCarport()
+void addLines()
}

Class UserProposition{
-int user_proposition_id
-String name
-String address
-String zipcodeCity
-int phone
-String email
-String comments
-int orders_id
-String order_date
-String status
-int carport_width
-int carport_length
-int shed_width
-int shed_length
-String roof_type
-String roof_material
-int pitch
-int coverage
-double offer_price
-double total_price

+UserProposition(user_proposition_id, name, address, zipcodeCity, phone, email, comments, orders_id, order_date, status, carport_width, carport_length, shed_width, shed_length, roof_type, roof_material, pitch, coverage, offer_price, total_price)
}

Class CustomerQuote{
-int customerId
-String name
-String address
-String zipcodeCity
-int phone
-String email
-String comment
+CustomerQuote(customerID)
+CustomerQuote(customerId, name, address, zipcodeCity, int phone, email, comment)
}

Class Item{
-int itemListID
-String materialType
-String material
-String description
-int quantity
-String unit
-double pricePrUnit
-int ordersID
-int totalPrice
+ Item()
+Item(itemListID, materialType, material, description, quantity, unit, pricePrUnit)
+Item(ordersID, itemListID, quantity, totalPrice)
}

Class ItemList{
-int item_list_id
-String material
-int amounts
-int orderline_id
-int orders_id
-String material_type
-double quantity
-String unit
-String description
-double total_price
+ItemList(orderline_id, orders_id, material_type quantity unit description, total_price)
+ItemList(item_list_id, material_type, material, description, amounts, unit, price_per_unit)
}



Class LogicFacade {
{static}+User login(email, password)
{static}+User createUser(email, password)
{static}+int createUserQuote(name, adress, zipcodeCity, phone, email, comments)
{static}+int createUserQuoteOrder(user_proposition_id, oc_width,oc_length, ots_width, ots_length, roof_type, roof_material, pitch)
{static}+void createQuoteOrderline(orders_id, material_type, material, description, length, quantity, unit, total_price)
{static}+void deleteQuote(quoteID)
{static}+List<UserProposition> getUserProposition()
{static}+List<UserProposition> getAllUserPropositions()
{static}+void updateStatus(orderID, status)
{static}+void updateQuoteUserProposition(orderID, name, address, zipcodeCity, phone, email, comments)
{static}+void updateQuoteOrders(orderID, oc_width,oc_length, ots_width, ots_length, roof_type, roof_material, pitch)
{static}+List<CarportWidth> getCarportWidth()
{static}+List<CarportLength> getCarportLength()
{static}+List<RoofFlat> getRoofFlat()
{static}+List<RoofRaised> getRoofRaised()
{static}+List<RoofDegree> getRoofDegree()
{static}+List<ShedWidth> getShedWidth()
{static}+List<ShedLength> getShedLength()
{static}+List<BeamDimensionLight> getBeamDimensionLight()
{static}+List<BeamDimensionHeavy> getBeamDimensionHeavy()
{static}+Map<Integer,Double> getPitchFactor()
{static}+List <StandardDimensions> getStandardDimensions()
{static}+List <Item> getItemList()
}

Class LoginSampleException extends Exception{
+LoginSampleException(msg)
}

class User{
-String email
-String id
-String password
-String role
+User(email, password, role)
}

/'##########################
 PresentationLayer
########################## '/
Class AdminItemList{
+String execute(request, response)
}

Class AdminItemListDB{
+String execute(request, response)
}

Class AdminMeasurementUnits{
+String execute(request,response)
}

Class AdminMeasurementUnitsDB{
+String execute(request,response)
}

Class AdminRafterSpacing{
+String execute(request,response)
}

Class AdminRafterSpacingDB{
+String execute(request,response)
}

Class AdminReceipt{
+String execute(request,response)
}

Class AdminRejectQuote{
+String execute(request,response)
}

Class AdminRoof{
+String execute(request,response)
}

Class AdminRoofDB{
+String execute(request,response)
}

Class AdminRoofPitch{
+String execute(request,response)
}

Class AdminRoofPitchDB{
+String execute(request,response)
}

Class AdminStandardDimension{
+String execute(request,response)
}

Class AdminStandardDimensionDB{
+String execute(request,response)
}

Class CarportCalcPage{
+String execute(request, response)
}

Class CarportCustomize{
+String execute(request,response)
}

Class Command {
{Static}-HashMap: String, command
{Static}-void initCommands()
{Static}+Command from(request)
{abstract} String execute()
}

Class Drawing{
+String execute(request,response)
}


Class EditItemList{
+String execute(request,response)
}

Class FrontController{
#void processRequest(request, response)
#void doGet(request, response)
#void doPost(request, response)
#void getServletInfo()
}

Class Login{
+String execute(request,response)
}

Class QuoteView{
+String execute(request,response)
}

Class Redirect{
+String execute(request,response)
}

Class Register{
+String execute(request,response)
}

Class RejectQuote{
+String execute(request,response)
}

Class ReturnAdmin{
+String execute(request,response)
}

Class UnknownCommand{
+String execute(request,response)
}

Class UpdateQuoteOrder{
+String execute(request,response)
}

Class UpdateQuotePrice{
+String execute(request,response)
}

Class UpdateQuoteUser{
+String execute(request,response)
}


/'##########################
 DBAccess
########################## '/
Class DataMapper{
{static}+void createUser(User)
{static}+User login(email, password)
{static}+Int createUserQuote(name, address, zipcodeCity, phone, email, comments)
{static}+Int createQuoteOrder(user_proposition_id, oc_width, oc_length, ots_length, ots_width, ots_length, roof_type, roof_material, pitch)
{static}+void createQuoteOrderline(orders_id, item_list_id, quantity, total_price)
{static}+void insertTotalPrice(calculateCarportTotalPriceWithTax, propositionID)
{static}+void deleteQuote(quoteID)
{static}+List <Item> getItemList()
{static}+List <UserProposition> getUserProposition(userID)
{static}+List <UserProposition> getAllUserProposition()
{static}+void updateStatus(orderID, status)
{static}+updateQuoteUserProposition(userID, name, address, zipcodeCity, phone, email, comments)
{static}+void updateQuoteOrders(orderID, oc_width, oc_length, ots_width, ots_length, roof_type, roof_type, roof_material, pitch)
{static}+void updateQuantityOrderline(orderlineID, quantity, price)
{static}+int getOrderIDFromLineID(orderID, orderLIneID)
{static}+double getOrderLinePriceFromLineID(orderID, orderLIneID)
{static}+int getOrderCoverage(orderID)
{static}+void updateOrderCoverage(coverage, orderID)
{static}+double getOrderTotalPrice(orderID)
{static}+void setPriceWithCoverage(totalPrice, orderID)
{static}+List <CarportWidth> getCarportWidth()
{static}+List <CarportLength> getCarportLength()
{static}+List <RoofFlat> getRoofFlat()
{static}+List <RoofRaised> getRoofRaised()
{static}+List <RoofDegree> getRoofDegree()
{static}+List <ShedWidth> getShedWidth()
{static}+List <ShedLength> getShedLength()
{static}+List <BeamDimensionLight> getBeamDimensionLight()
{static}+List <BeamDimensionHeavy> getBeamDimensionHeavy()
{static}+Map <Integer, Double> getPitchFactor()
{static}+List <StandardDimensions> getStandardDimensions()
{static}+List <ItemList> getAllItemList(orderID)
{static}+List <MeasurementUnits> getMeasurementUnits()
{static}+void createMeasurementUnits(units, c_width, c_length, ts_width, ts_length)
{static}+void updateMeasurementUnits(measurement_units_id, units, c_width, c_length, ts_width, ts_length)
{static}+void deleteMeasurementUnits(measurement_units_id)
{static}+List <ItemList> getItemListAdmin()
{static}+List <ItemList> createItemList(material_type, material, description, amounts, unit, price_per_unit)
{static}+void updateItemList(item_list_id, material_type, material, description, amounts, String unit, price_per_unit)
{static}+void deleteItemList(item_list_id)
{static}+List <RafterSpacing> getRafterSpacing()
{static}+void createRafterSpacing(category, beam_dimension, beam_spacing, rafter_length)
{static}+void updateRafterSpacing(rafter_spacing_id, category, beam_dimension, beam_spacing, rafter_length)
{static}+void deleteRafterSpacing(rafter_spacing_id)
{static}+List <Roof> getRoof()
{static}+void createRoof(roof_type, roof_category, roof_material)
{static}+void updateRoof(roof_id, roof_type, roof_category, roof_material)
{static}+void deleteRoof(roof_id)
{static}+List <RoofPitch> getRoofPitch()
{static}+void createRoofPitch(pitch, factor)
{static}+void updateRoofPitch(roof_pitch_id, pitch, factor)
{static}+void deleteRoofPitch(roof_pitch_id)
{static}+List <StandardDimensions> getStandardDimensionsAdmin()
{static}+void updateStandardDimensions( standard_dimensions_id, bottom_lathspan, bottom_laths, top_lath_gap,double avg_lath_span, roof_tile_length, roof_tile_width, roof_trapez_length, roof_trapez_width, shed_claddeing_board_dim, beam_dimension_heavy, beam_dimension_light)
}
Class Connector{
{static}-String URL
{static}-String USERNAME
{static}-String PASSWORD
{static}-Connection singleton
{static}+Connection connection()
{static}+void setConnection(con)
}


@enduml